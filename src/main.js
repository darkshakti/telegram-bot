const {HtmlTelegramBot} = require("./bot");
const ChatGptService = require("./gpt");

class MyTelegramBot extends HtmlTelegramBot {
    constructor(token) {
        super(token);
        this.mode = null;
    }

    async start() {
        this.mode = 'main'
        const text = this.loadMessage('main')
        await this.sendImage('main')
        await this.sendText(text)

        await this.showMainMenu({
            'start': '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞',
            'profile': '–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Tinder-–ø—Ä–æ—Ñ–∏–ª—è üòé',
            'opener': '—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ü•∞',
            'message': '–ø–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ üòà',
            'date': '–ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ üî•',
            'gpt': '–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —á–∞—Ç—É GPT üß†',
            'html': '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è HTML',
        })
    }

    async html() {
        await this.sendHTML('<h3 style="color:#1558b0"> –ü—Ä–∏–≤–µ—Ç! </h3>')
        const html = this.loadHtml('main')
        await this.sendHTML(html, {theme: 'dark'})
    }

    async gpt(){
        this.mode = 'gpt';
        const text = this.loadMessage('gpt')
        await this.sendImage('gpt')
        await this.sendText(text)
    }

    async gptDialog(msg) {
        const text = msg.text;
        const answer = await chatgpt.sendQuestion('–û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å', text)
        await this.sendText(answer)
    }

    async date() {
        this.mode = 'date'
        const text = this.loadMessage('date')
        await this.sendImage('date')
        await this.sendTextButtons(text, {
            'date_grande': '–ê—Ä–∏–∞–Ω–∞ –ì—Ä–∞–Ω–¥–µ',
            'date_lawrence': '–î–∂–µ–Ω–Ω–∏—Ñ–µ—Ä –õ–æ—É—Ä–µ–Ω—Å',
            'date_robbie': '–ú–∞—Ä–≥–æ –†–æ–±–±–∏',
            'date_zendaya': '–ó–µ–Ω–¥–µ—è',
            'date_gosling': '–†–∞–π–∞–Ω –ì–æ—Å–ª–∏–Ω–≥',
            'date_hardy': '–¢–æ–º –•–∞—Ä–¥–∏',
        })
    }

    async dateButton(callbackQuery) {
        const query = callbackQuery.data;
        await this.sendText(query);
        await this.sendImage(query)
        await this.sendText('–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –ü—Ä–∏–≥–ª–∞—Å–∏ –¥–µ–≤—É—à–∫—É/–ø–∞—Ä–Ω—è –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ –∑–∞ 5 —Å–æ–æ–±—â–µ–Ω–∏–π:')
        const prompt = this.loadPrompt(query)
        await chatgpt.setPrompt(prompt);
    }

    async dateDialog(msg) {
        const text = msg.text;
        const myMessage = await this.sendText('–î–µ–≤—É—à–∫–∞ –Ω–∞–±–∏—Ä–∞–µ—Ç —Ç–µ–∫—Å—Ç...')
        const answer = await chatgpt.addMessage(text);
        await this.editText(myMessage, answer);
    }

    async message(msg) {
        this.mode = 'message';
        const text = this.loadMessage('message');
        await this.sendImage('message');
        await this.sendText(text);
    }

    async messageButton(callbackQuery) {

    }

    async messageDialog(msg) {

    }

    async

    async hello(msg){
        if (this.mode === 'gpt')
            await this.gptDialog(msg)
        else if (this.mode === 'date')
            await this.dateDialog(msg)
        else if (this.mode === 'message')
            await this.messageDialog(msg)
        else {
            const text = msg.text;
            await this.sendText('<b>–ü—Ä–∏–≤–µ—Ç!</b>')
            await this.sendText('<i>–ö–∞–∫ –¥–µ–ª–∞?</i>')
            await this.sendText(`–í—ã –ø–∏—Å–∞–ª–∏: ${text}`)

            await this.sendImage('avatar_main')
            await this.sendTextButtons('–ö–∞–∫–∞—è —É –≤–∞—Å —Ç–µ–º–∞ –≤ –¢–µ–ª–µ–≥—Ä–∞–º?', {
                'theme_light': '–°–≤–µ—Ç–ª–∞—è',
                'theme_dark': '–¢–µ–º–Ω–∞—è',
            })
        }
    }

    async helloButton(callbackQuery) {
        const query = callbackQuery.data;
        if (query === 'theme_light'){
            await this.sendText('–£ –≤–∞—Å —Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞')
        }
        else if (query === 'theme_dark') {
            await this.sendText('–£ –≤–∞—Å —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞')
        }
    }

}

const chatgpt = new ChatGptService('gpt:9p4dgMGH8xaays5cTFbEJFkblB3TGdVvUMGZg2yosnt0BhOs');
const bot = new MyTelegramBot('7515364389:AAG8j4mpKksYrWcL-HRR9-5FGtgjQGtkAQo');

bot.onCommand(/\/start/, bot.start); // /start
bot.onCommand(/\/html/, bot.html); // /html
bot.onCommand(/\/gpt/, bot.gpt); // /gpt
bot.onCommand(/\/date/, bot.date); // /date
bot.onCommand(/\/message/, bot.message); // /message

bot.onTextMessage(bot.hello);
bot.onButtonCallback(/^date_.*/, bot.dateButton);
bot.onButtonCallback(/^date_.*/, bot.dateButton);
bot.onButtonCallback(/^.*/, bot.messageButton);